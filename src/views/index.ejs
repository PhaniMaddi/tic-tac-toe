<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tic Tac Toe</title>
  <link rel="stylesheet" type="text/css" href="index.css">
</head>

<body>
  <div class="container">
    <!-- <div class="game-type">
      <input type="radio" id="single-player" name="game-type" value="single">
      <label for="single-player">Single Player</label>
      <input type="radio" id="multi-player" name="game-type" value="multi">
      <label for="multi-player">Multi Player</label>
    </div> -->

    <div class="select-player">
      <input type="radio" id="x-player" name="player" value="x" onclick="newGame.selectPlayer(this)" checked>
      <label for="x-player">X</label>
      <input type="radio" id="o-player" name="player" value="o" onclick="newGame.selectPlayer(this)">
      <label for="o-player">O</label>
    </div>
    <div>Start the game or change the player</div>

    <div class="game-board">
    </div>
  </div>

  <script type="text/javascript" src="gameplay.js"></script>
  <script type="text/javascript">

    class Game {
      gameState = {}
      game = null

      constructor(player) {
        this.gameState = {
          player
        }

        this.game = new TicTacToe(this.gameState.player)
      }

      initializeGame() {
        this.game.initializeBoard();
        const board = this.populateBoard(this.game.getBoard());
        let html = document
          .getElementsByClassName("game-board")[0];

        html.innerHTML = "";
        html.insertAdjacentHTML("afterbegin", board);
      }

      selectPlayer(obj) {
        const player = obj.getAttribute("value");
        this.game = new TicTacToe(player);
        this.initializeGame();
      }

      populateBoard(board) {
        let result = [];
        for (let i = 0; i < board.length; i++) {
          for (let j = 0; j < board[i].length; j++) {
            let value = board[i][j];
            let disabled = value !== '-';

            result.push(
              `
            <div 
              class="grid ${disabled ? "disabled" : "enabled"}"" 
              data-row="${i}"
              data-column="${j}"
              onclick="newGame.registerPlay(this)"
            >
              ${disabled ? board[i][j] : ""}
            </div>
            `
            )
          }
        }

        return result.join("");
      }

      registerPlay(obj) {
        let value = this.game.getCurrentPlayer();
        let row = obj.getAttribute("data-row");
        let column = obj.getAttribute("data-column");

        this.game.placeMark(Number(row), Number(column));

        let updatedBoard = this.populateBoard(this.game.getBoard());
        let gameElement = document.getElementsByClassName("game-board")[0];
        gameElement.innerHTML = "";
        gameElement.insertAdjacentHTML("afterbegin", updatedBoard);

        if (this.game.isWinner()) {
          console.log(`${this.game.getCurrentPlayer()} is the winner`);
          // reset the game
          this.initializeGame();
          // TODO: show the result and reset the game
        } else if (this.game.isBoardFull()) {
          // reset the game
          this.initializeGame();
          console.log("this game is a draw");
        } else {
          this.game.changePlayer();
        }

      }
    }

    const newGame = new Game("x");
    newGame.initializeGame();

  </script>
</body>

</html>